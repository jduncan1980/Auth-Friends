{"ast":null,"code":"var _jsxFileName = \"/Users/jasonduncan/Lambda_Projects/Auth-Friends/friends/src/components/Login.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Grid, TextField, Button, makeStyles } from '@material-ui/core';\nimport axios from 'axios';\nconst useStyles = makeStyles({\n  container: {\n    paddingTop: '10%',\n    height: '20%'\n  }\n});\nexport default function Login() {\n  const classes = useStyles();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState\n  } = useForm({\n    mode: 'onChange'\n  });\n\n  const onSubmit = data => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/api/login',\n      data: { ...data\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.error(err.message);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    component: \"form\",\n    item: true,\n    container: true,\n    spacing: 1,\n    onSubmit: handleSubmit(onSubmit),\n    direction: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    variant: \"outlined\",\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    inputRef: register({\n      required: 'Required'\n    }),\n    label: \"Username:\",\n    error: errors.username ? true : false,\n    helperText: errors.username ? errors.username.message : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: 'Required'\n    }),\n    variant: \"outlined\",\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    label: \"Password:\",\n    error: errors.password ? true : false,\n    helperText: errors.password ? errors.password.message : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    disabled: !formState.isValid // startIcon={<LockOpenOutlinedIcon />}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"Login\")));\n}","map":{"version":3,"sources":["/Users/jasonduncan/Lambda_Projects/Auth-Friends/friends/src/components/Login.js"],"names":["React","useForm","Grid","TextField","Button","makeStyles","axios","useStyles","container","paddingTop","height","Login","classes","handleSubmit","register","errors","formState","mode","onSubmit","data","method","url","then","res","console","log","catch","err","error","message","required","username","password","isValid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Grid, TextField, Button, makeStyles } from '@material-ui/core';\nimport axios from 'axios';\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tpaddingTop: '10%',\n\t\theight: '20%',\n\t},\n});\n\nexport default function Login() {\n\tconst classes = useStyles();\n\tconst { handleSubmit, register, errors, formState } = useForm({\n\t\tmode: 'onChange',\n\t});\n\n\tconst onSubmit = (data) => {\n\t\taxios({\n\t\t\tmethod: 'POST',\n\t\t\turl: 'http://localhost:5000/api/login',\n\t\t\tdata: {\n\t\t\t\t...data,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(err.message);\n\t\t\t});\n\t};\n\n\treturn (\n\t\t<Grid\n\t\t\tclassName={classes.container}\n\t\t\tcomponent='form'\n\t\t\titem\n\t\t\tcontainer\n\t\t\tspacing={1}\n\t\t\tonSubmit={handleSubmit(onSubmit)}\n\t\t\tdirection='column'\n\t\t\talignItems='center'\n\t\t\tjustifyContent='space-between'\n\t\t>\n\t\t\t<Grid item>\n\t\t\t\t<TextField\n\t\t\t\t\tautoFocus\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='username'\n\t\t\t\t\tname='username'\n\t\t\t\t\tinputRef={register({ required: 'Required' })}\n\t\t\t\t\tlabel='Username:'\n\t\t\t\t\terror={errors.username ? true : false}\n\t\t\t\t\thelperText={errors.username ? errors.username.message : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<TextField\n\t\t\t\t\tinputRef={register({\n\t\t\t\t\t\trequired: 'Required',\n\t\t\t\t\t})}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tid='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tlabel='Password:'\n\t\t\t\t\terror={errors.password ? true : false}\n\t\t\t\t\thelperText={errors.password ? errors.password.message : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tsize='large'\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tdisabled={!formState.isValid}\n\t\t\t\t\t// startIcon={<LockOpenOutlinedIcon />}\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}