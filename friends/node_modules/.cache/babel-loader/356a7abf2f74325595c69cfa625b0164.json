{"ast":null,"code":"var _jsxFileName = \"/Users/jasonduncan/Lambda_Projects/Auth-Friends/friends/src/components/Login.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Grid, TextField, Button, makeStyles, Typography, CircularProgress } from '@material-ui/core';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nconst useStyles = makeStyles({\n  container: {\n    paddingTop: '10%',\n    height: '20%'\n  }\n});\nexport default function Login() {\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    handleSubmit,\n    register,\n    errors,\n    formState\n  } = useForm({\n    mode: 'onChange'\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    axios.post('http://localhost:5000/api/login', data).then(res => {\n      console.log(res);\n      localStorage.setItem('authToken', res.data.payload);\n      history.push('/friends');\n    }).catch(err => {\n      console.error(err.message);\n      localStorage.removeItem('authToken');\n      alert(`Something Went Wrong! Please Try Again!`);\n    });\n  };\n\n  if (formState.isSubmitting) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, \"Loading...\"), /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    component: \"form\",\n    item: true,\n    container: true,\n    spacing: 1,\n    onSubmit: handleSubmit(onSubmit),\n    direction: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    variant: \"outlined\",\n    type: \"text\",\n    id: \"username\",\n    name: \"username\",\n    inputRef: register({\n      required: 'Required'\n    }),\n    label: \"Username:\",\n    error: errors.username ? true : false,\n    helperText: errors.username ? errors.username.message : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: register({\n      required: 'Required'\n    }),\n    variant: \"outlined\",\n    type: \"password\",\n    id: \"password\",\n    name: \"password\",\n    label: \"Password:\",\n    error: errors.password ? true : false,\n    helperText: errors.password ? errors.password.message : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, \"Login\")));\n}","map":{"version":3,"sources":["/Users/jasonduncan/Lambda_Projects/Auth-Friends/friends/src/components/Login.js"],"names":["React","useForm","Grid","TextField","Button","makeStyles","Typography","CircularProgress","axios","useHistory","useStyles","container","paddingTop","height","Login","history","classes","handleSubmit","register","errors","formState","mode","onSubmit","data","console","log","post","then","res","localStorage","setItem","payload","push","catch","err","error","message","removeItem","alert","isSubmitting","required","username","password","isValid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport {\n\tGrid,\n\tTextField,\n\tButton,\n\tmakeStyles,\n\tTypography,\n\tCircularProgress,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n\tcontainer: {\n\t\tpaddingTop: '10%',\n\t\theight: '20%',\n\t},\n});\n\nexport default function Login() {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\tconst { handleSubmit, register, errors, formState } = useForm({\n\t\tmode: 'onChange',\n\t});\n\n\tconst onSubmit = (data) => {\n\t\tconsole.log(data);\n\t\taxios\n\t\t\t.post('http://localhost:5000/api/login', data)\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tlocalStorage.setItem('authToken', res.data.payload);\n\t\t\t\thistory.push('/friends');\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(err.message);\n\t\t\t\tlocalStorage.removeItem('authToken');\n\t\t\t\talert(`Something Went Wrong! Please Try Again!`);\n\t\t\t});\n\t};\n\n\tif (formState.isSubmitting) {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Typography>Loading...</Typography>\n\t\t\t\t<CircularProgress color='secondary' />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tclassName={classes.container}\n\t\t\tcomponent='form'\n\t\t\titem\n\t\t\tcontainer\n\t\t\tspacing={1}\n\t\t\tonSubmit={handleSubmit(onSubmit)}\n\t\t\tdirection='column'\n\t\t\talignItems='center'\n\t\t\tjustifyContent='space-between'\n\t\t>\n\t\t\t<Grid item>\n\t\t\t\t<TextField\n\t\t\t\t\tautoFocus\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='username'\n\t\t\t\t\tname='username'\n\t\t\t\t\tinputRef={register({ required: 'Required' })}\n\t\t\t\t\tlabel='Username:'\n\t\t\t\t\terror={errors.username ? true : false}\n\t\t\t\t\thelperText={errors.username ? errors.username.message : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<TextField\n\t\t\t\t\tinputRef={register({\n\t\t\t\t\t\trequired: 'Required',\n\t\t\t\t\t})}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tid='password'\n\t\t\t\t\tname='password'\n\t\t\t\t\tlabel='Password:'\n\t\t\t\t\terror={errors.password ? true : false}\n\t\t\t\t\thelperText={errors.password ? errors.password.message : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\n\t\t\t<Grid item>\n\t\t\t\t<Button\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tsize='large'\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tdisabled={!formState.isValid}\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}